{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"mezzio-session-cache üá∑üá∫ –†—É—Å—Å–∫–∏–º –≥—Ä–∞–∂–¥–∞–Ω–∞–º –ú—ã, —É—á–∞—Å—Ç–Ω–∏–∫–∏ Laminas, —Ä–æ–¥–∏–ª–∏—Å—å –∏ –∂–∏–≤–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –£ –º–Ω–æ–≥–∏—Ö –∏–∑ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∏ –∫–æ–ª–ª–µ–≥–∏ –∫–∞–∫ –≤ –†–æ—Å—Å–∏–∏, —Ç–∞–∫ –∏ –≤ –£–∫—Ä–∞–∏–Ω–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å —Ä–æ–¥–∏–ª–∏—Å—å –≤ –†–æ—Å—Å–∏–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å –∂–∏–≤—É—Ç –≤ –†–æ—Å—Å–∏–∏. –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–∞–±—É—à–∫–∏ –∏ –¥–µ–¥—É—à–∫–∏ —Å—Ä–∞–∂–∞–ª–∏—Å—å —Å —Ñ–∞—à–∏—Å—Ç–∞–º–∏ –≤–æ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω–µ. –ó–¥–µ—Å—å –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞—à–∏–∑–º. –£ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞—Å –µ—Å—Ç—å —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–∞—Å–ª–∞—Å—å –∏–∑ –¥–æ–º–∞ –≤–º–µ—Å—Ç–µ —Å —Å—ã–Ω–æ–º. –ü–æ–µ–∑–¥ –∑–∞–¥–µ—Ä–∂–∞–ª—Å—è –∏–∑-–∑–∞ –±–æ–º–±–µ–∂–∫–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ –≤–ø–µ—Ä–µ–¥–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä—è—á—É—Ç—Å—è –≤ –±–æ–º–±–æ—É–±–µ–∂–∏—â–∞—Ö. –ú—ã —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∂–¥–µ–º –≤–µ—Å—Ç–æ—á–∫–∏ –æ—Ç –Ω–∏—Ö –ø–æ—Å–ª–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –Ω–∞–ª–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ –Ω–∞–Ω–æ—Å—è—Ç —É–¥–∞—Ä—ã –∏ –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ –±–æ–ª—å–Ω–∏—Ü–∞–º, —à–∫–æ–ª–∞–º, –¥–µ—Ç—Å–∫–∏–º —Å–∞–¥–∞–º –∏ –¥–æ–º–∞–º. –ú—ã –Ω–µ –±–µ—Ä–µ–º —ç—Ç–æ –∏–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –°–ú–ò. –ú—ã –Ω–∞–±–ª—é–¥–∞–µ–º —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é. –í—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –Ω–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –Ω–∞–º –≤–Ω–æ–≤—å. –ú—ã –Ω—É–∂–¥–∞–µ–º—Å—è –≤ –ø–æ–º–æ—â–∏. –í—ã—Ö–æ–¥–∏—Ç–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –ø—Ä–æ—Ç–∏–≤ —ç—Ç–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–π –≤–æ–π–Ω—ã. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫—Ä–æ–≤–æ–ø—Ä–æ–ª–∏—Ç–∏–µ. –°–∫–∞–∂–∏—Ç–µ \"–ù–µ—Ç –≤–æ–π–Ω–µ!\" üá∫üá∏ To Citizens of Russia We at Laminas come from all over the world. Many of us have friends, family and colleagues in both Russia and Ukraine. Some of us were born in Russia. Some of us currently live in Russia. Some have grandparents who fought Nazis in World War II. Nobody here supports fascism. One team member has a Ukrainian relative who fled her home with her son. The train was delayed due to bombing on the road ahead. We have friends who are hiding in bomb shelters. We anxiously follow up on them after the air raids, which indiscriminately fire at hospitals, schools, kindergartens and houses. We're not taking this from any media. These are our actual experiences. You trust us enough to use our software. We ask that you trust us to say the truth on this. We need your help. Go out and protest this unnecessary war. Stop the bloodshed. Say \"stop the war!\" This library provides a PSR-6 session persistence adapter for mezzio-session . Installation Run the following to install this library: $ composer require mezzio/mezzio-session-cache Documentation Browse the documentation online at https://docs.mezzio.dev/mezzio-session-cache/ Support Issues Chat Forum","title":"Home"},{"location":"#mezzio-session-cache","text":"","title":"mezzio-session-cache"},{"location":"#_1","text":"–ú—ã, —É—á–∞—Å—Ç–Ω–∏–∫–∏ Laminas, —Ä–æ–¥–∏–ª–∏—Å—å –∏ –∂–∏–≤–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –£ –º–Ω–æ–≥–∏—Ö –∏–∑ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∏ –∫–æ–ª–ª–µ–≥–∏ –∫–∞–∫ –≤ –†–æ—Å—Å–∏–∏, —Ç–∞–∫ –∏ –≤ –£–∫—Ä–∞–∏–Ω–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å —Ä–æ–¥–∏–ª–∏—Å—å –≤ –†–æ—Å—Å–∏–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å –∂–∏–≤—É—Ç –≤ –†–æ—Å—Å–∏–∏. –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–∞–±—É—à–∫–∏ –∏ –¥–µ–¥—É—à–∫–∏ —Å—Ä–∞–∂–∞–ª–∏—Å—å —Å —Ñ–∞—à–∏—Å—Ç–∞–º–∏ –≤–æ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω–µ. –ó–¥–µ—Å—å –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞—à–∏–∑–º. –£ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞—Å –µ—Å—Ç—å —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–∞—Å–ª–∞—Å—å –∏–∑ –¥–æ–º–∞ –≤–º–µ—Å—Ç–µ —Å —Å—ã–Ω–æ–º. –ü–æ–µ–∑–¥ –∑–∞–¥–µ—Ä–∂–∞–ª—Å—è –∏–∑-–∑–∞ –±–æ–º–±–µ–∂–∫–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ –≤–ø–µ—Ä–µ–¥–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä—è—á—É—Ç—Å—è –≤ –±–æ–º–±–æ—É–±–µ–∂–∏—â–∞—Ö. –ú—ã —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∂–¥–µ–º –≤–µ—Å—Ç–æ—á–∫–∏ –æ—Ç –Ω–∏—Ö –ø–æ—Å–ª–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –Ω–∞–ª–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ –Ω–∞–Ω–æ—Å—è—Ç —É–¥–∞—Ä—ã –∏ –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ –±–æ–ª—å–Ω–∏—Ü–∞–º, —à–∫–æ–ª–∞–º, –¥–µ—Ç—Å–∫–∏–º —Å–∞–¥–∞–º –∏ –¥–æ–º–∞–º. –ú—ã –Ω–µ –±–µ—Ä–µ–º —ç—Ç–æ –∏–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –°–ú–ò. –ú—ã –Ω–∞–±–ª—é–¥–∞–µ–º —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é. –í—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –Ω–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –Ω–∞–º –≤–Ω–æ–≤—å. –ú—ã –Ω—É–∂–¥–∞–µ–º—Å—è –≤ –ø–æ–º–æ—â–∏. –í—ã—Ö–æ–¥–∏—Ç–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –ø—Ä–æ—Ç–∏–≤ —ç—Ç–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–π –≤–æ–π–Ω—ã. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫—Ä–æ–≤–æ–ø—Ä–æ–ª–∏—Ç–∏–µ. –°–∫–∞–∂–∏—Ç–µ \"–ù–µ—Ç –≤–æ–π–Ω–µ!\"","title":"üá∑üá∫ –†—É—Å—Å–∫–∏–º –≥—Ä–∞–∂–¥–∞–Ω–∞–º"},{"location":"#to-citizens-of-russia","text":"We at Laminas come from all over the world. Many of us have friends, family and colleagues in both Russia and Ukraine. Some of us were born in Russia. Some of us currently live in Russia. Some have grandparents who fought Nazis in World War II. Nobody here supports fascism. One team member has a Ukrainian relative who fled her home with her son. The train was delayed due to bombing on the road ahead. We have friends who are hiding in bomb shelters. We anxiously follow up on them after the air raids, which indiscriminately fire at hospitals, schools, kindergartens and houses. We're not taking this from any media. These are our actual experiences. You trust us enough to use our software. We ask that you trust us to say the truth on this. We need your help. Go out and protest this unnecessary war. Stop the bloodshed. Say \"stop the war!\" This library provides a PSR-6 session persistence adapter for mezzio-session .","title":"üá∫üá∏ To Citizens of Russia"},{"location":"#installation","text":"Run the following to install this library: $ composer require mezzio/mezzio-session-cache","title":"Installation"},{"location":"#documentation","text":"Browse the documentation online at https://docs.mezzio.dev/mezzio-session-cache/","title":"Documentation"},{"location":"#support","text":"Issues Chat Forum","title":"Support"},{"location":"v1/config/","text":"Configuration This package allows configuring the following items: The PSR-6 CacheItemPoolInterface service to use. The session cookie name. The session cookie domain. The session cookie path. The session cookie secure option. The session cookie httponly option. The session cookie SameSite attribute (since 1.4.0). The cache limiter (which controls how resources using sessions are cached by the browser). When the session expires. When the resource using a session was last modified. Whether or not to create a persistent session cookie (i.e., one that will not expire when the browser is closed). This document details how to configure each of these items. Config service This package looks for a service named config that returns an array or array-like value. Inside this value, it looks for a key named mezzio-session-cache , which is expected to be an associative array or object that acts like an associative array. return [ 'mezzio-session-cache' =&gt; [ // key/value pairs ], ]; CacheItemPoolInterface By default, the factory will look for a service named Psr\\Cache\\CacheItemPoolInterface . If found, that service will be used to seed the persistence adapter. You may also provide a cache_item_pool_service configuration value. If present, this service name will be queried instead. Using a global pool To use a global cache item pool, configure the PSR-6 CacheItemPoolInterface service in your dependency configuration: use Psr\\Cache\\CacheItemPoolInterface; return [ 'dependencies' =&gt; [ 'factories' =&gt; [ CacheItemPoolInterface::class =&gt; FactoryProvidingACachePool::class, ], ], ]; Using a named pool To use a specific cache item pool: use Psr\\Cache\\CacheItemPoolInterface; return [ 'dependencies' =&gt; [ 'factories' =&gt; [ 'MoreSpecificPool' =&gt; FactoryProvidingACachePool::class, ], ], 'mezzio-session-cache' =&gt; [ 'cache_item_pool_service' =&gt; 'MoreSpecificPool', ], ]; Non-Pool configuration As noted earlier, you may configure a number of other values to customize your persistence adapter. The following is example configuration, with inline comments detailing expected and default values. use Psr\\Cache\\CacheItemPoolInterface; return [ 'mezzio-session-cache' =&gt; [ // Detailed in the above section; allows using a different // cache item pool than the global one. 'cache_item_pool_service' =&gt; CacheItemPoolInterface::class, // The name of the session cookie. This name must comply with // the syntax outlined in https://tools.ietf.org/html/rfc6265.html 'cookie_name' =&gt; 'PHPSESSION', // The (sub)domain that the cookie is available to. Setting this // to a subdomain (such as 'www.example.com') will make the cookie // available to that subdomain and all other sub-domains of it // (i.e. w2.www.example.com). To make the cookie available to the // whole domain (including all subdomains of it), simply set the // value to the domain name ('example.com', in this case). // Leave this null to use browser default (current hostname). 'cookie_domain' =&gt; null, // The path prefix of the cookie domain to which it applies. 'cookie_path' =&gt; '/', // Indicates that the cookie should only be transmitted over a // secure HTTPS connection from the client. When set to TRUE, the // cookie will only be set if a secure connection exists. 'cookie_secure' =&gt; false, // When TRUE the cookie will be made accessible only through the // HTTP protocol. This means that the cookie won't be accessible // by scripting languages, such as JavaScript. 'cookie_http_only' =&gt; false, // Available since 1.4.0 // // Asserts that a cookie must not be sent with cross-origin requests, // providing some protection against cross-site request forgery attacks (CSRF). // // Allowed values: // - Strict: The browser sends the cookie only for same-site requests // (that is, requests originating from the same site that set the cookie). // If the request originated from a different URL than the current one, // no cookies with the SameSite=Strict attribute are sent. // - Lax: The cookie is withheld on cross-site subrequests, such as calls // to load images or frames, but is sent when a user navigates to the URL // from an external site, such as by following a link. // - None: The browser sends the cookie with both cross-site and same-site // requests. 'cookie_same_site' =&gt; 'Lax', // Governs the various cache control headers emitted when // a session cookie is provided to the client. Value may be one // of \"nocache\", \"public\", \"private\", or \"private_no_expire\"; // semantics are the same as outlined in // http://php.net/session_cache_limiter 'cache_limiter' =&gt; 'nocache', // When the cache and the cookie should expire, in seconds. Defaults // to 180 minutes. 'cache_expire' =&gt; 10800, // An integer value indicating when the resource to which the session // applies was last modified. If not provided, it uses the last // modified time of, in order, // - the public/index.php file of the current working directory // - the index.php file of the current working directory // - the current working directory 'last_modified' =&gt; null, // A boolean value indicating whether or not the session cookie // should persist. By default, this is disabled (false); passing // a boolean true value will enable the feature. When enabled, the // cookie will be generated with an Expires directive equal to the // the current time plus the cache_expire value as noted above. // // As of 1.2.0, developers may define the session TTL by calling the // session instance's `persistSessionFor(int $duration)` method. When // that method has been called, the engine will use that value even if // the below flag is toggled off. 'persistent' =&gt; false, ], ]; Using the service By default, this package define the service Mezzio\\Session\\Cache\\CacheSessionPersistence , assigning it to the factory Mezzio\\Session\\Cache\\CacheSessionPersistenceFactory . After you have installed the package, you will need to tell your application to use this service when using the SessionMiddleware . The SessionMiddleware looks for the service Mezzio\\Session\\SessionPersistenceInterface . You can tell your container to use the CacheSessionPersistence in two different ways. First, you can alias it: // in config/autoload/dependencies.global.php: use Mezzio\\Session\\Cache\\CacheSessionPersistence; use Mezzio\\Session\\SessionPersistenceInterface; return [ 'dependencies' =&gt; [ 'aliases' =&gt; [ SessionPersistenceInterface::class =&gt; CacheSessionPersistence::class, ], ], ]; Second, you can instead assign the SessionPersistenceInterface service to the factory for the CacheSessionPersistence implementation: // in config/autoload/dependencies.global.php: use Mezzio\\Session\\Cache\\CacheSessionPersistenceFactory; use Mezzio\\Session\\SessionPersistenceInterface; return [ 'dependencies' =&gt; [ 'factories' =&gt; [ SessionPersistenceInterface::class =&gt; CacheSessionPersistenceFactory::class, ], ], ];","title":"Configuration"},{"location":"v1/config/#configuration","text":"This package allows configuring the following items: The PSR-6 CacheItemPoolInterface service to use. The session cookie name. The session cookie domain. The session cookie path. The session cookie secure option. The session cookie httponly option. The session cookie SameSite attribute (since 1.4.0). The cache limiter (which controls how resources using sessions are cached by the browser). When the session expires. When the resource using a session was last modified. Whether or not to create a persistent session cookie (i.e., one that will not expire when the browser is closed). This document details how to configure each of these items.","title":"Configuration"},{"location":"v1/config/#config-service","text":"This package looks for a service named config that returns an array or array-like value. Inside this value, it looks for a key named mezzio-session-cache , which is expected to be an associative array or object that acts like an associative array. return [ 'mezzio-session-cache' =&gt; [ // key/value pairs ], ];","title":"Config service"},{"location":"v1/config/#cacheitempoolinterface","text":"By default, the factory will look for a service named Psr\\Cache\\CacheItemPoolInterface . If found, that service will be used to seed the persistence adapter. You may also provide a cache_item_pool_service configuration value. If present, this service name will be queried instead.","title":"CacheItemPoolInterface"},{"location":"v1/config/#non-pool-configuration","text":"As noted earlier, you may configure a number of other values to customize your persistence adapter. The following is example configuration, with inline comments detailing expected and default values. use Psr\\Cache\\CacheItemPoolInterface; return [ 'mezzio-session-cache' =&gt; [ // Detailed in the above section; allows using a different // cache item pool than the global one. 'cache_item_pool_service' =&gt; CacheItemPoolInterface::class, // The name of the session cookie. This name must comply with // the syntax outlined in https://tools.ietf.org/html/rfc6265.html 'cookie_name' =&gt; 'PHPSESSION', // The (sub)domain that the cookie is available to. Setting this // to a subdomain (such as 'www.example.com') will make the cookie // available to that subdomain and all other sub-domains of it // (i.e. w2.www.example.com). To make the cookie available to the // whole domain (including all subdomains of it), simply set the // value to the domain name ('example.com', in this case). // Leave this null to use browser default (current hostname). 'cookie_domain' =&gt; null, // The path prefix of the cookie domain to which it applies. 'cookie_path' =&gt; '/', // Indicates that the cookie should only be transmitted over a // secure HTTPS connection from the client. When set to TRUE, the // cookie will only be set if a secure connection exists. 'cookie_secure' =&gt; false, // When TRUE the cookie will be made accessible only through the // HTTP protocol. This means that the cookie won't be accessible // by scripting languages, such as JavaScript. 'cookie_http_only' =&gt; false, // Available since 1.4.0 // // Asserts that a cookie must not be sent with cross-origin requests, // providing some protection against cross-site request forgery attacks (CSRF). // // Allowed values: // - Strict: The browser sends the cookie only for same-site requests // (that is, requests originating from the same site that set the cookie). // If the request originated from a different URL than the current one, // no cookies with the SameSite=Strict attribute are sent. // - Lax: The cookie is withheld on cross-site subrequests, such as calls // to load images or frames, but is sent when a user navigates to the URL // from an external site, such as by following a link. // - None: The browser sends the cookie with both cross-site and same-site // requests. 'cookie_same_site' =&gt; 'Lax', // Governs the various cache control headers emitted when // a session cookie is provided to the client. Value may be one // of \"nocache\", \"public\", \"private\", or \"private_no_expire\"; // semantics are the same as outlined in // http://php.net/session_cache_limiter 'cache_limiter' =&gt; 'nocache', // When the cache and the cookie should expire, in seconds. Defaults // to 180 minutes. 'cache_expire' =&gt; 10800, // An integer value indicating when the resource to which the session // applies was last modified. If not provided, it uses the last // modified time of, in order, // - the public/index.php file of the current working directory // - the index.php file of the current working directory // - the current working directory 'last_modified' =&gt; null, // A boolean value indicating whether or not the session cookie // should persist. By default, this is disabled (false); passing // a boolean true value will enable the feature. When enabled, the // cookie will be generated with an Expires directive equal to the // the current time plus the cache_expire value as noted above. // // As of 1.2.0, developers may define the session TTL by calling the // session instance's `persistSessionFor(int $duration)` method. When // that method has been called, the engine will use that value even if // the below flag is toggled off. 'persistent' =&gt; false, ], ];","title":"Non-Pool configuration"},{"location":"v1/config/#using-the-service","text":"By default, this package define the service Mezzio\\Session\\Cache\\CacheSessionPersistence , assigning it to the factory Mezzio\\Session\\Cache\\CacheSessionPersistenceFactory . After you have installed the package, you will need to tell your application to use this service when using the SessionMiddleware . The SessionMiddleware looks for the service Mezzio\\Session\\SessionPersistenceInterface . You can tell your container to use the CacheSessionPersistence in two different ways. First, you can alias it: // in config/autoload/dependencies.global.php: use Mezzio\\Session\\Cache\\CacheSessionPersistence; use Mezzio\\Session\\SessionPersistenceInterface; return [ 'dependencies' =&gt; [ 'aliases' =&gt; [ SessionPersistenceInterface::class =&gt; CacheSessionPersistence::class, ], ], ]; Second, you can instead assign the SessionPersistenceInterface service to the factory for the CacheSessionPersistence implementation: // in config/autoload/dependencies.global.php: use Mezzio\\Session\\Cache\\CacheSessionPersistenceFactory; use Mezzio\\Session\\SessionPersistenceInterface; return [ 'dependencies' =&gt; [ 'factories' =&gt; [ SessionPersistenceInterface::class =&gt; CacheSessionPersistenceFactory::class, ], ], ];","title":"Using the service"},{"location":"v1/installation/","text":"Cache Implementation Required To use this component, a PSR-6 CacheItemPoolInterface implementation is required. laminas-cache provides the PSR-6 implementations, install it and choose one of the cache adapters. Install laminas-cache and a Cache Adapter Install laminas-cache via Composer : $ composer require laminas/laminas-cache laminas-cache is shipped without a specific cache adapter to allow free choice of storage backends and their dependencies. For example, install the laminas-cache Filesystem adapter : $ composer require laminas/laminas-cache-storage-adapter-filesystem Read More in the laminas-cache Documentation PSR-6 Cache Adapters","title":"Installation"},{"location":"v1/installation/#cache-implementation-required","text":"To use this component, a PSR-6 CacheItemPoolInterface implementation is required. laminas-cache provides the PSR-6 implementations, install it and choose one of the cache adapters.","title":"Cache Implementation Required"},{"location":"v1/intro/","text":"Introduction This component provides a PSR-6 session persistence adapter for use with mezzio-session . PSR-6 defines cache items and cache item pools. This package uses a cache item pool in which to store and retrieve sessions. PSR-6 was chosen over the simpler PSR-16 as it specifically provides functionality around expiry , which allows us to expire sessions. Usage Generally, you will only provide configuration for this service, including configuring a PSR-6 CacheItemPoolInterface service; mezzio-session will then consume it via its SessionMiddleware .","title":"Introduction"},{"location":"v1/intro/#introduction","text":"This component provides a PSR-6 session persistence adapter for use with mezzio-session . PSR-6 defines cache items and cache item pools. This package uses a cache item pool in which to store and retrieve sessions. PSR-6 was chosen over the simpler PSR-16 as it specifically provides functionality around expiry , which allows us to expire sessions.","title":"Introduction"},{"location":"v1/intro/#usage","text":"Generally, you will only provide configuration for this service, including configuring a PSR-6 CacheItemPoolInterface service; mezzio-session will then consume it via its SessionMiddleware .","title":"Usage"},{"location":"v1/manual/","text":"Manual usage The following details the constructor of the Mezzio\\Session\\Cache\\CacheSessionPersistence class: /** * Prepare session cache and default HTTP caching headers. * * @param CacheItemPoolInterface $cache The cache pool instance * @param string $cookieName The name of the cookie * @param string $cacheLimiter The cache limiter setting is used to * determine how to send HTTP client-side caching headers. Those * headers will be added programmatically to the response along with * the session set-cookie header when the session data is persisted. * @param int $cacheExpire Number of seconds until the session cookie * should expire; defaults to 180 minutes (180m * 60s/m = 10800s), * which is the default of the PHP session.cache_expire setting. This * is also used to set the TTL for session data. * @param null|int $lastModified Timestamp when the application was last * modified. If not provided, this will look for each of * public/index.php, index.php, and finally the current working * directory, using the filemtime() of the first found. * @param bool $persistent Whether or not to create a persistent cookie. If * provided, this sets the Expires directive for the cookie based on * the value of $cacheExpire. Developers can also set the expiry at * runtime via the Session instance, using its persistSessionFor() * method; that value will be honored even if global persistence * is toggled true here. * @param string|null $cookieDomain The domain for the cookie. If not set, * the current domain is used. * @param bool $cookieSecure Whether or not the cookie should be required * to be set over an encrypted connection * @param bool $cookieHttpOnly Whether or not the cookie may be accessed * by client-side apis (e.g., Javascript). An http-only cookie cannot * be accessed by client-side apis. * @param string $cookieSameSite The same-site rule to apply to the persisted * cookie. Options include \"Lax\", \"Strict\", and \"None\". * Available since 1.4.0 * * @todo reorder these arguments so they make more sense and are in an * order of importance */ public function __construct( CacheItemPoolInterface $cache, string $cookieName, string $cookiePath = '/', string $cacheLimiter = 'nocache', int $cacheExpire = 10800, ?int $lastModified = null, bool $persistent = false, string $cookieDomain = null, bool $cookieSecure = false, bool $cookieHttpOnly = false, string $cookieSameSite = 'Lax' ) { Pass all required values and any optional values when creating an instance: use Cache\\Adapter\\Predis\\PredisCachePool; use Mezzio\\Session\\Cache\\CacheSessionPersistence; use Mezzio\\Session\\SessionMiddleware; $cachePool = new PredisCachePool('tcp://localhost:6379'); $persistence = new CacheSessionPersistence( $cachePool, 'MYSITE' '/', 'public', 60 * 60 * 24 * 30 // 30 days ); $middleware = new SessionMiddleware($persistence);","title":"Manual Usage"},{"location":"v1/manual/#manual-usage","text":"The following details the constructor of the Mezzio\\Session\\Cache\\CacheSessionPersistence class: /** * Prepare session cache and default HTTP caching headers. * * @param CacheItemPoolInterface $cache The cache pool instance * @param string $cookieName The name of the cookie * @param string $cacheLimiter The cache limiter setting is used to * determine how to send HTTP client-side caching headers. Those * headers will be added programmatically to the response along with * the session set-cookie header when the session data is persisted. * @param int $cacheExpire Number of seconds until the session cookie * should expire; defaults to 180 minutes (180m * 60s/m = 10800s), * which is the default of the PHP session.cache_expire setting. This * is also used to set the TTL for session data. * @param null|int $lastModified Timestamp when the application was last * modified. If not provided, this will look for each of * public/index.php, index.php, and finally the current working * directory, using the filemtime() of the first found. * @param bool $persistent Whether or not to create a persistent cookie. If * provided, this sets the Expires directive for the cookie based on * the value of $cacheExpire. Developers can also set the expiry at * runtime via the Session instance, using its persistSessionFor() * method; that value will be honored even if global persistence * is toggled true here. * @param string|null $cookieDomain The domain for the cookie. If not set, * the current domain is used. * @param bool $cookieSecure Whether or not the cookie should be required * to be set over an encrypted connection * @param bool $cookieHttpOnly Whether or not the cookie may be accessed * by client-side apis (e.g., Javascript). An http-only cookie cannot * be accessed by client-side apis. * @param string $cookieSameSite The same-site rule to apply to the persisted * cookie. Options include \"Lax\", \"Strict\", and \"None\". * Available since 1.4.0 * * @todo reorder these arguments so they make more sense and are in an * order of importance */ public function __construct( CacheItemPoolInterface $cache, string $cookieName, string $cookiePath = '/', string $cacheLimiter = 'nocache', int $cacheExpire = 10800, ?int $lastModified = null, bool $persistent = false, string $cookieDomain = null, bool $cookieSecure = false, bool $cookieHttpOnly = false, string $cookieSameSite = 'Lax' ) { Pass all required values and any optional values when creating an instance: use Cache\\Adapter\\Predis\\PredisCachePool; use Mezzio\\Session\\Cache\\CacheSessionPersistence; use Mezzio\\Session\\SessionMiddleware; $cachePool = new PredisCachePool('tcp://localhost:6379'); $persistence = new CacheSessionPersistence( $cachePool, 'MYSITE' '/', 'public', 60 * 60 * 24 * 30 // 30 days ); $middleware = new SessionMiddleware($persistence);","title":"Manual usage"}]}